version: '3'

services:
  apache2:
    build: apache2
    restart: always
    volumes:
      - apache2_log:/var/log/apache2
      - ftp:/srv/ftp:ro
      - letsencrypt:/etc/letsencrypt:ro
    networks:
      - frontend
    ports:
      - "80:80"
      - "443:443"

  vsftpd:
    build: vsftpd
    restart: always
    environment:
      - SSL_ENABLE=${FTP_SSL_ENABLE}
    volumes:
      - ftp:/srv/ftp
      - letsencrypt:/etc/letsencrypt:ro
    network_mode: host

  pyftpd:
    build: pyftpd
    restart: always
    environment:
      - SSL_ENABLE=${FTP_SSL_ENABLE}
    volumes:
      - ftp:/srv/ftp
      - letsencrypt:/etc/letsencrypt:ro
    network_mode: host

  netredirect:
    build: netredirect
    restart: always
    volumes:
      - letsencrypt:/etc/letsencrypt:ro
    networks:
      - pptp
      - l2tp
      - openvpn
      - openvpn_tcp

  pptp:
    build: pptp
    depends_on:
      - netredirect
    restart: always
    environment:
      - CLIENT=${PPTP_CLIENT}
      - SECRET=${PPTP_SECRET}
    networks:
      - pptp
    ports:
      - "1723:1723"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - /dev/ppp
    sysctls:
      - net.ipv4.ip_forward=1

  l2tp:
    build: l2tp
    depends_on:
      - netredirect
    restart: always
    environment:
      - VPN_IPSEC_PSK=${L2TP_VPN_IPSEC_PSK}
      - VPN_USER=${L2TP_VPN_USER}
      - VPN_PASSWORD=${L2TP_VPN_PASSWORD}
    volumes:
      - /lib/modules:/lib/modules:ro
    networks:
      - l2tp
    ports:
      - "500:500/udp"
      - "4500:4500/udp"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - /dev/ppp
    sysctls:
      - net.ipv4.ip_forward=1

  openvpn:
    build: openvpn
    depends_on:
      - netredirect
    restart: always
    networks:
      - openvpn
      - cgserver
    ports:
      - "1194:1194/udp"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1

  openvpn_tcp:
    build:
      context: openvpn
      dockerfile: Dockerfile.tcp
    depends_on:
      - netredirect
    restart: always
    networks:
      - openvpn_tcp
      - cgserver
    ports:
      - "1194:1194"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_ABSOLUTE_URI: /phpmyadmin/
    networks:
      - frontend
      - backend

  php:
    build: php
    restart: always
    volumes:
      - ftp:/srv/ftp:ro
    networks:
      - frontend
      - backend

  cgserver:
    build: cgserver
    depends_on:
      - mysql
    restart: always
    environment:
      - PPTP_CLIENT=${PPTP_CLIENT}
      - PPTP_SECRET=${PPTP_SECRET}
      - L2TP_VPN_IPSEC_PSK=${L2TP_VPN_IPSEC_PSK}
      - L2TP_VPN_USER=${L2TP_VPN_USER}
      - L2TP_VPN_PASSWORD=${L2TP_VPN_PASSWORD}
    networks:
      - frontend
      - backend
      - cgserver

  csvn:
    build: csvn
    restart: always
    volumes:
      - csvn:/var/csvn
    networks:
      - frontend

  download:
    build: download
    restart: always
    environment:
      - GITHUB_CLIENT_ID=${DOWNLOAD_GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${DOWNLOAD_GITHUB_CLIENT_SECRET}
    volumes:
      - download:/mnt/download
    networks:
      - frontend
    cap_add:
      - NET_ADMIN
      - NET_RAW

  letsencrypt:
    build: letsencrypt
    depends_on:
      - apache2
    environment:
      - ROOTS=${LETSENCRYPT_ROOTS}
      - DOMAINS=${LETSENCRYPT_DOMAINS}
    volumes:
      - ftp:/srv/ftp
      - letsencrypt:/etc/letsencrypt
    networks:
      - letsencrypt

  backup:
    build: backup
    volumes:
      - ftp:/mnt/ftp:ro
      - csvn:/mnt/csvn:ro
      - mysql:/mnt/mysql:ro
      - backup_cache:/mnt/backup_cache
      - backup_storage:/mnt/backup_storage
      - ./backup/backup.py:/backup.py:ro
      - ./backup/exclude:/etc/cgservice/backup/exclude:ro
      - ./backup/ignore:/etc/cgservice/backup/ignore:ro

networks:
  frontend:

  backend:

  pptp:

  l2tp:

  openvpn:

  openvpn_tcp:

  cgserver:

  letsencrypt:

volumes:
  apache2_log:

  ftp:

  letsencrypt:

  mysql:

  csvn:

  backup_cache:

  backup_storage:

  download:
